from aiogram import types
from models import User
import json
import requests
import os
from loader import dp, db
from keyboards import teacher_kb

@dp.message_handler(lambda message: message.text.startswith('teacher '))
async def start_teacher(message: types.Message):
    text = message.text.split()[1]
    url_teacher = "https://selfree.s20.online/v2api/1/teacher/index"
    data_check = {
        "phone": text
    }
    headers = {
        "X-ALFACRM-TOKEN": os.getenv("X-ALFACRM-TOKEN")
    }
    if not text.startswith("+7"):
        await message.answer("""–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å +7""")
    elif len(text) != 12:
        await message.answer("""–í –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 11 —Ü–∏—Ñ—Ä""")
    else:
        response_teacher = requests.post(url_teacher, data=json.dumps(data_check), headers=headers)
        if len(response_teacher.json()['items']) == 0:
            await message.answer("–¢–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ —É—á–∏—Ç–µ–ª–µ–π SELFREE ü§∑‚Äç‚ôÇÔ∏è")
        else:
            check = db.query(User).filter(User.tg_user_id == message.from_user.id).first()
            if check is not None:
                db.delete(check)
                db.commit()
            name_user = response_teacher.json()['items'][0]["name"]
            user = User()
            user.username = name_user
            user.is_student = False
            user.tg_user_id = message.from_user.id
            user.crm_user_id = response_teacher.json()['items'][0]['id']
            user.phone = text
            db.add(user)
            db.commit()
            await message.answer(f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name_user} üñê 
–ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏—è—Ö –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏!""", reply_markup=teacher_kb)
